#pragma checksum "C:\Users\Pratibha Jain\Documents\GitHub\IS8012\IS8012InClass-master\IS8012InClass-master\QueryApp\Pages\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "ad0bd0ad337398ee13f44393795295f03240aaa0"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(QueryApp.Pages.Pages_Index), @"mvc.1.0.razor-page", @"/Pages/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.RazorPages.Infrastructure.RazorPageAttribute(@"/Pages/Index.cshtml", typeof(QueryApp.Pages.Pages_Index), null)]
namespace QueryApp.Pages
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\Users\Pratibha Jain\Documents\GitHub\IS8012\IS8012InClass-master\IS8012InClass-master\QueryApp\Pages\_ViewImports.cshtml"
using QueryApp;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"ad0bd0ad337398ee13f44393795295f03240aaa0", @"/Pages/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"96b8721be92a6303a3968fc3bc9d0f12bc79742c", @"/Pages/_ViewImports.cshtml")]
    public class Pages_Index : global::Microsoft.AspNetCore.Mvc.RazorPages.Page
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\Users\Pratibha Jain\Documents\GitHub\IS8012\IS8012InClass-master\IS8012InClass-master\QueryApp\Pages\Index.cshtml"
  
    ViewData["Title"] = "Home page";

#line default
#line hidden
            BeginContext(66, 215, true);
            WriteLiteral("\n<table class=\"table table-bordered table-condensed\" style=\"margin-top: 30px;\">\n    <thead>\n        <tr>\n            <th colspan=\"3\">URL</th>\n        </tr>\n    </thead>\n    <tbody id=\"links\">\n    </tbody>\n</table>\n\n");
            EndContext();
            DefineSection("Scripts", async() => {
                BeginContext(299, 4300, true);
                WriteLiteral(@"
    <script>

    // https://stackoverflow.com/a/7228322/185045
    function randomIntFromInterval(min,max)
    {
        return Math.floor(Math.random()*(max-min+1)+min);
    }

    $(function() {

        var links = [
            {
                set: ""Question Set 1"",
                root: 'Q1',
                methods: [
                    'AllCitiesStartingWith/Y',
                    'AllCitiesStartingWith/G',
                    'CitiesWithPopulationOver?population=500000',
                    'CitiesWithPopulationOver?population=1000000',
                    'AllCitiesThatIncludeTheLetter/z',
                    'AllCitiesThatIncludeTheLetter/x',
                    'AllCitiesInState/WY',
                    'AllCitiesInState/SD',
                    'CitiesSortedByNameAndState?page=1&resultsPerPage=25',
                    'CitiesSortedByNameAndState?page=150&resultsPerPage=10',
                ]
            },
            {
                set: ""Question Set 2"",
                root: 'Q2',
     ");
                WriteLiteral(@"           methods: [
                    '12',
                    '46',
                    'CityWithTheLongestName',
                    'CityWithTheShortestName',
                    'CityWithTheLargestPopulation',
                    'CityWithTheLargestPopulation/OH',
                    'CityWithTheLargestPopulation/WV',
                    'CityWithTheLowestPopulation'
                ]
            },
            {
                set: ""Question Set 3"",
                root: 'Q3',
                methods: [
                    'TotalPopulationInAllCities',
                    'AveragePopulationAccrossAllCities',
                    'AveragePopulationInState/OH',
                    'AveragePopulationInState/CA',
                    'CountOfAllCitiesWithPopulationLessThan?population=50000',
                    'CountOfAllCitiesWithPopulationLessThan?population=60000',
                    'StateWithMostCities'
                ]
            }
        ];


        $.each(links, function(i, grp) {
         ");
                WriteLiteral(@"   $(""#links"").append('<tr class=""bg-info""><th>' + grp.set + ""</th><th>Expected Data<th>Success</th></tr>"");
            $.each(grp.methods, function(idx, item) {
                var url = '/api/' + grp.root + '/' + item;
                var key = grp.root + idx;
                $('#links').append('<tr><td><a target=""_blank"" href=""' + url + '"">' + url + '</a></td><td><a target=""_blank"" href=""https://is7012.azurewebsites.net' + url + '"">view</a></td><td class=""text-center"" id=""' + key + '""><i class=""glyphicon glyphicon-refresh glyphicon-spin""></i></td></tr>');


                setTimeout(function() {
                    $.ajax({
                        method: 'GET',
                        url: url,
                        dataType: 'text',
                        statusCode: {
                            400: function() {
                                $(""#"" + key).html('<i class=""glyphicon glyphicon-remove text-warning""></i>');
                            },
                            200: function(data,");
                WriteLiteral(@" status, xhr) {
                                $.get(""https://is7012.azurewebsites.net"" + url, function(answer,status,answerXhr) {
                                    if (xhr.responseText == answerXhr.responseText) {
                                        $(""#"" + key).html('<i class=""glyphicon glyphicon-ok text-success""></i>').parent().addClass(""success"");
                                    } else {
                                        $(""#"" + key).html('<i class=""glyphicon glyphicon-remove text-warning""></i>').parent().addClass(""warning"");
                                    }
                                });
                                
                            },
                            404: function() {
                                $(""#"" + key).html('<i class=""glyphicon glyphicon-remove text-danger""></i> 404');
                            },
                            500: function() {
                                $(""#"" + key).html('<i class=""glyphicon glyphicon-remove text-dang");
                WriteLiteral("er\"></i> 500\');\n                            }\n                        }\n                    });\n                }, randomIntFromInterval(50, 2000));\n            });\n        });\n        \n    });\n</script>\n");
                EndContext();
            }
            );
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<IndexModel> Html { get; private set; }
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel> ViewData => (global::Microsoft.AspNetCore.Mvc.ViewFeatures.ViewDataDictionary<IndexModel>)PageContext?.ViewData;
        public IndexModel Model => ViewData.Model;
    }
}
#pragma warning restore 1591
